# -*- coding: utf-8 -*-
"""CLASSPJ-TEST.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nxHv2JtB_Mz8cAiovV5a3XzR1XYu2EZF
"""

from tabulate import tabulate
#Class 1 start
class Doctor:
  def __init__(self, ID, name, specialization, working_time, qualification, room_number):
    self.id = ID
    self.name = name
    self.specialization = specialization
    self.working_time = working_time
    self.qualification = qualification
    self.room_number = room_number

  def formatDrInfo(dr_list):
    return "_".join(dr_list)

  def enterDrInfo():
    new_dr_info = []
    new_dr_info.append(input("Enter the doctor’s ID:\n" + ""))
    new_dr_info.append(input("Enter the doctor’s name:\n" + ""))
    new_dr_info.append(input("Enter the doctor’s specility:\n" + ""))
    new_dr_info.append(input("Enter the doctor’s timing (e.g., 7am-10pm):\n" + ""))
    new_dr_info.append(input("Enter the doctor’s qualification:\n" + ""))
    new_dr_info.append(input("Enter the doctor’s room number:\n" + ""))
    return new_dr_info

  def readDoctorsFile():
    doctors_list = []
    doctors_raw_data = open("/content/doctors.txt", "r")
    doctors_raw_data2 = doctors_raw_data.readlines()
    a = 0
    for line in doctors_raw_data2:
      doctors_list.append(doctors_raw_data2[a].rstrip().split('_'))
      a += 1
    del(doctors_list[0])
    return doctors_list

  def searchDoctorById(ID):
    a = 0
    doctors_list = Doctor.readDoctorsFile()
    for line in doctors_list:
      if doctors_list[a][0] == (ID):
        return True
      else:
        a += 1

  def searchDoctorByName(name):
    a = 0
    doctors_list = Doctor.readDoctorsFile()
    for line in doctors_list:
      if doctors_list[a][1] == (name):
        return True
      else:
        a += 1
  
  def displayDoctorInfo(id_or_name):
    header = ["ID", "Name", "Speciality", "Timing", "Qualification", "Room Number"]
    from tabulate import tabulate
    a = 0
    doctors_list = Doctor.readDoctorsFile()
    input_type = id_or_name.isnumeric()
    if input_type == True:
      for item in doctors_list:
        if id_or_name == doctors_list[a][0]:
          print(tabulate([item], headers = header))
          break
        else:
          a += 1
    else:
      for item in doctors_list:
        if id_or_name == doctors_list[a][1]:
          print(tabulate([item], headers = header))
          break
        else:
          a += 1

  def editDoctorInfo():
    doctors_list = Doctor.readDoctorsFile()
    new_dr_info = [0, 0, 0, 0, 0, 0]
    input_dr = input("Please enter the id of the doctor that you want to edit their information:\n" + "")
    yes_no = Doctor.searchDoctorById(input_dr)
    a = 0
    if yes_no == True:
      while True:
        if doctors_list[a][0] == input_dr:
          new_dr_info[1] = input("Enter new Name:\n" + "")
          new_dr_info[2] = input("Enter new Specilist in:\n" + "")
          new_dr_info[3] = input("Enter new Timing:\n" + "")
          new_dr_info[4] = input("Enter new Qualification:\n" + "")
          new_dr_info[5] = input("Enter new Room number:\n" + "")
          dr_raw_data = open("/content/doctors.txt", "r")
          item = dr_raw_data.read()
          item = item.replace(doctors_list[a][1], new_dr_info[1])
          item = item.replace(doctors_list[a][2], new_dr_info[2])
          item = item.replace(doctors_list[a][3], new_dr_info[3])
          item = item.replace(doctors_list[a][4], new_dr_info[4])
          item = item.replace(doctors_list[a][5], new_dr_info[5])
          dr_raw_data.close()
          dr_raw_data = open("/content/doctors.txt", "w")
          dr_raw_data.write(item)
          dr_raw_data.close()
          break
        else:
          a += 1
    else:
      print("Can't find the doctor with the same ID on the system")

  def displayDoctorsList():
    doctors_list = []
    doctors_raw_data = open("/content/doctors.txt", "r")
    doctors_raw_data2 = doctors_raw_data.readlines()
    a = 0
    for line in doctors_raw_data2:
      doctors_list.append(doctors_raw_data2[a].rstrip().split('_'))
      a += 1
    del(doctors_list[0])
    header = ["ID", "Name", "Speciality", "Timing", "Qualification", "Room Number"]
    print(tabulate(doctors_list, headers = header))
    doctors_raw_data.close

  def writeListOfDoctorsToFile(new_dr_list):
    new_doctor_list = "_".join(new_dr_list)
    doctors_raw_data = open("/content/doctors.txt", "a")
    doctors_raw_data.write(f"\n{new_doctor_list}")
    doctors_raw_data.close()

  def addDrToFile(new_dr):
    new_doctor = "_".join(new_dr)
    doctors_raw_data = open("/content/doctors.txt", "a")
    doctors_raw_data.write(f"\n{new_doctor}")
    doctors_raw_data.close()
#Class 1 end

#Class 2 start
class Facility:
  def displayFacilities():
    facility_raw_data = open("/content/facilities.txt", "r")
    facility_raw_data2 = facility_raw_data.readlines()
    for line in facility_raw_data2:
      print(line)
    facility_raw_data.close()

  def addFacility(new_facility):
    facility_raw_data = open("/content/facilities.txt", "a")
    facility_raw_data.write(f"\n{new_facility}")
    facility_raw_data.close()

  def writeListOffacilitiesToFile(new_facility_list):
    facility_raw_data = open("/content/facilities.txt", "a")
    facility_raw_data.write(f"\n{new_facility_list}")
    facility_raw_data.close()
#Class 2 End

#Class 3 start
class Laboratory:

  def readLaboratoriesFile():
    lab_list = []
    lab_raw_data = open("/content/laboratories.txt", "r")
    lab_raw_data2 = lab_raw_data.readlines()
    a = 0
    for line in lab_raw_data2:
      lab_list.append(lab_raw_data2[a].rstrip().split('_'))
      a += 1
    del(lab_list[0])
    lab_raw_data.close
    return lab_list

  def displayLabsList():
    header = ["Facility", "Cost"]
    lab_list2 = Laboratory.readLaboratoriesFile()
    print(tabulate(lab_list2, headers = header))
    
  def writeListOfLabsToFile():
    header = ["Facility", "Cost"]
    lab_list2 = Laboratory.readLaboratoriesFile
    print(tabulate(lab_list2, headers = header))

  def formatLabInfo(lab_list):
    return "_".join(lab_list)

  def enterLaboratoryInfo():
    new_lab = []
    new_lab.append(input("Enter Laboratory facility:\n" + ""))
    new_lab.append(input("Enter Laboratory cost:\n" + ""))
    return new_lab

  def addLabToFile(new_lab):
    add_new_lab = "_".join(new_lab)
    lab_raw_data = open("/content/laboratories.txt", "a")
    lab_raw_data.write(f"\n{add_new_lab}")
    lab_raw_data.close()
#Class 3 end

#Class 4 start
class Patient:
  def formatPatientInfo(patient):
    return "_".join(patient)
  
  def enterPatientInfo():
    new_patient_info = []
    new_patient_info.append(input("Enter Patient id:\n" + ""))
    new_patient_info.append(input("Enter Patient name:\n" + ""))
    new_patient_info.append(input("Enter Patient disease:\n" + ""))
    new_patient_info.append(input("Enter Patient gender:\n" + ""))
    new_patient_info.append(input("Enter Patient age:\n" + ""))
    return new_patient_info
  
  def readPatientsFile():
    patient_list = []
    patient_raw_data = open("/content/patients.txt", "r")
    patient_raw_data2 = patient_raw_data.readlines()
    a = 0
    for line in patient_raw_data2:
      patient_list.append(patient_raw_data2[a].rstrip().split('_'))
      a += 1
    del(patient_list[0])
    return patient_list

  def searchPatientById(ID):
    a = 0
    patient_list = Patient.readPatientsFile()
    for line in patient_list:
      if patient_list[a][0] == (ID):
        return True
      else:
        a += 1

  def displayPatientInfo(ID):
    header = ["ID", "Name", "Disease", "Gender", "Age"]
    from tabulate import tabulate
    a = 0
    patient_list = Patient.readPatientsFile()
    for item in patient_list:
      if ID in patient_list[a][0]:
        print(tabulate([item], headers = header))
        break
      else:
        a += 1
    
  def editPatientInfo():
    patient_list = Patient.readPatientsFile()
    new_patient = [0, 0, 0, 0, 0]
    input_ID = input("Please enter the id of the Patient that you want to edit their information:\n" + "")
    yes_no = Patient.searchPatientById(input_ID)
    a = 0
    if yes_no == True:
      while True:
        if patient_list[a][0] == input_ID:
          new_patient[1] = input("Enter new Name:\n" + "")
          new_patient[2] = input("Enter new disease:\n" + "")
          new_patient[3] = input("Enter new gender:\n" + "")
          new_patient[4] = input("Enter new age:\n" + "")
          patient_info = open("/content/patients.txt", "r")
          item = patient_info.read()
          item = item.replace(patient_list[a][1], new_patient[1])
          item = item.replace(patient_list[a][2], new_patient[2])
          item = item.replace(patient_list[a][3], new_patient[3])
          item = item.replace(patient_list[a][4], new_patient[4])
          patient_info.close()
          patient_info = open("/content/patients.txt", "w")
          patient_info.write(item)
          patient_info.close()
          break
        else:
          a += 1
    else:
      print("Can't find the Patient with the same id on the system")
    
  def displayPatientsList():
    patient_list = []
    patient_raw_data = open("/content/patients.txt", "r")
    patient_raw_data2 = patient_raw_data.readlines()
    a = 0
    for line in patient_raw_data2:
      patient_list.append(patient_raw_data2[a].rstrip().split('_'))
      a += 1
    del(patient_list[0])
    header = ["ID", "Name", "Disease", "Gender", "Age"]
    print(tabulate(patient_list, headers = header))

  def writeListOfPatientsToFile(new_patients_list):
    new_patient_list_info = "_".join(new_patients_list)
    patient_raw_data = open("/content/patients.txt", "a")
    patient_raw_data.write(f"\n{new_patient_list_info}")
    patient_raw_data.close()

  def addPatientToFile(new_patient):
    new_patient_info = "_".join(new_patient)
    patient_raw_data = open("/content/patients.txt", "a")
    patient_raw_data.write(f"\n{new_patient_info}")
    patient_raw_data.close()
#Class 4 end

#Class 5 start
class Management:
  def DisplayMenu4(lryer1, lryer2):
    if (lryer1, lryer2) == (1, 6) or (lryer1, lryer2) == (2, 3) or (lryer1, lryer2) == (3, 3) or (lryer1, lryer2) == (4, 5):
      pass
    else:
      print("Back to the previous page.")
      return a.append(0)
#Class 5 end

#Start

while True:
  print("Welcome to Alberta Hospital (AH) Managment system ")
  input_action = input("Select from the following options, or select 0 to stop:\n" + 
                      "1 - 	Doctors\n" +
                      "2 - 	Facilities\n" +
                      "3 - 	Laboratories\n" +
                      "4 - 	Patients\n" + "")
  if input_action == "0":
    break

  else:
    a = [0]
    for loop in a:
      if input_action == "1":
        input_action2 = input("Doctors Menu:\n" +
                              "1 - Display Doctors list\n" +
                              "2 - Search for doctor by ID\n" +
                              "3 - Search for doctor by name\n" +
                              "4 - Add doctor\n" +
                              "5 - Edit doctor info\n" +
                              "6 - Back to the Main Menu\n" + "")
        
        if input_action2 == "1":
          Doctor.displayDoctorsList()
        elif input_action2 == "2":
          input_dr_id = input("Enter the doctor ID:\n" + "")
          if Doctor.searchDoctorById(input_dr_id) == True:
            Doctor.displayDoctorInfo(input_dr_id)
          else:
            print("Can't find the doctor with the same ID on the system")
        elif input_action2 == "3":
          input_dr_name = input("Enter the doctor name:\n" + "")
          if Doctor.searchDoctorByName(input_dr_name) == True:
            Doctor.displayDoctorInfo(input_dr_name)
          else:
            print("Can't find the doctor with the same name on the system")
        elif input_action2 == "4":
          new_doctor = Doctor.enterDrInfo()
          Doctor.addDrToFile(new_doctor)
        elif input_action2 == "5":
          new_doctor = Doctor.editDoctorInfo()
        elif input_action2 == "6":
          break

      elif input_action == "2":
        input_action2 = input("Facilities Menu:\n" +
                               "1 - Display Facilities list\n" +
                               "2 - Add Facility\n" +
                               "3 - Back to the Main Menu\n" + "")
        
        if input_action2 == "1":
          Facility.displayFacilities()
        elif input_action2 == "2":
          new_facility = input("Enter Facility name:\n" + "")
          Facility.addFacility(new_facility)
        elif input_action2 == "3":
          break

      elif input_action =="3":
        input_action2 = input("Laboratories Menu:\n" +
                           "1 - Display laboratories list\n" +
                           "2 - Add laboratory\n" +
                           "3 - Back to the Main Menu\n" + "")
        
        if input_action2 == "1":
          Laboratory.displayLabsList()
        elif input_action2 == "2":
          new_lab = Laboratory.enterLaboratoryInfo()
          Laboratory.addLabToFile(new_lab)
        elif input_action2 =="3":
          break
      
      elif input_action =="4":
        input_action2 = input("Patients Menu:\n" +
                              "1 - Display patients list\n" +
                              "2 - Search for patient by ID\n" +
                              "3 - Add patient\n" +
                              "4 - Edit patient info\n" +
                              "5 - Back to the Main Menu\n" + "")
        
        if input_action2 == "1":
          Patient.displayPatientsList()
        elif input_action2 == "2":
          patient_ID = input("Enter the Patient Id:\n" + "")
          if Patient.searchPatientById(patient_ID) == True:
            Patient.displayPatientInfo(patient_ID)
          else:
            print("Can't find the Patient with the same id on the system.")
        elif input_action2 == "3":
          new_patient = Patient.enterPatientInfo()
          Patient.addPatientToFile(new_patient)
        elif input_action2 == "4":
          Patient.editPatientInfo()
        elif input_action2 == "5":
          break
      Management.DisplayMenu4(input_action, input_action2)

b = [1, 2, 3, 4, 5]
for a in b:
  print(a)